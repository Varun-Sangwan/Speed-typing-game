{"ast":null,"code":"var _jsxFileName = \"/Users/Varun/Data/Workspace/The career path/React/speed-typing-game/src/App.js\";\nimport logo from \"./logo.svg\";\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Let's Check your Typing Speed\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n      type: \"textarea\",\n      name: \"textarea\",\n      value: \"\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n      children: \"Time remaining to catch up : \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      children: \"Let's Start\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Total word count is \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 5\n  }, this);\n}\n\n_c = App;\nexport default App;\n/**\n * Challenge: build the basic structure of our game\n * \n * 1. <h1> title at the top\n * 2. <textarea> for the box to type in \n *      (tip: React normalizes <textarea /> to be more like <input />, \n *      so it can be used as a self-closing element and uses the `value` property\n *      to set its contents)\n * 3. <h4> ti display the amount of time remaining\n * 4. <button> to start the game\n * 5. Another <h1> to display the word count\n */\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/Varun/Data/Workspace/The career path/React/speed-typing-game/src/App.js"],"names":["App"],"mappings":";;AACA,OAAO,WAAP;;;AAEA,SAASA,GAAT,GAAe;AACb,sBACE;AAAA,4BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AACE,MAAA,IAAI,EAAC,UADP;AAEE,MAAA,IAAI,EAAC,UAFP;AAGE,MAAA,KAAK,EAAC;AAHR;AAAA;AAAA;AAAA;AAAA,YAFJ,eAOI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAPJ,eAQI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YARJ,eASI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YATJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAaD;;KAdQA,G;AAgBT,eAAeA,GAAf;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import logo from './logo.svg';\nimport './App.css';\n\nfunction App() {\n  return (\n    <div>\n        <h1>Let's Check your Typing Speed</h1>\n        <textarea\n          type='textarea'  \n          name='textarea'\n          value=''\n        />\n        <h4>Time remaining to catch up : </h4>\n        <button>Let's Start</button>\n        <h1>Total word count is </h1>\n    </div>\n  );\n}\n\nexport default App;\n\n/**\n * Challenge: build the basic structure of our game\n * \n * 1. <h1> title at the top\n * 2. <textarea> for the box to type in \n *      (tip: React normalizes <textarea /> to be more like <input />, \n *      so it can be used as a self-closing element and uses the `value` property\n *      to set its contents)\n * 3. <h4> ti display the amount of time remaining\n * 4. <button> to start the game\n * 5. Another <h1> to display the word count\n */"]},"metadata":{},"sourceType":"module"}